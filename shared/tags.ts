export type Tag = { key: string, label: string, bit: bigint, category: string };

export const TAGS: Tag[] = [
  { key: 'SYM_H', label: 'sym-h', bit: 1n << 0n, category: 'Symmetry' },
  { key: 'SYM_V', label: 'sym-v', bit: 1n << 1n, category: 'Symmetry' },
  { key: 'SYM_DIAG', label: 'sym-diag', bit: 1n << 2n, category: 'Symmetry' },
  { key: 'SYM_ANTI_DIAG', label: 'sym-anti-diag', bit: 1n << 3n, category: 'Symmetry' },
  { key: 'SYM', label: 'sym', bit: 1n << 4n, category: 'Symmetry' },
  { key: 'SYM_ALL', label: 'sym-all', bit: 1n << 5n, category: 'Symmetry' },
  { key: 'SYM_FOUR_FOLD_ROTATION', label: 'four-fold-rotation', bit: 1n << 6n, category: 'Symmetry' },
  { key: 'BORDERS_TOP_BORDER_STRICT', label: 'top-border-strict', bit: 1n << 7n, category: 'Border' },
  { key: 'BORDERS_TOP_BORDER_MODERATE', label: 'top-border-moderate', bit: 1n << 8n, category: 'Border' },
  { key: 'BORDERS_BOTTOM_BORDER_STRICT', label: 'bottom-border-strict', bit: 1n << 9n, category: 'Border' },
  { key: 'BORDERS_BOTTOM_BORDER_MODERATE', label: 'bottom-border-moderate', bit: 1n << 10n, category: 'Border' },
  { key: 'BORDERS_LEFT_BORDER_STRICT', label: 'left-border-strict', bit: 1n << 11n, category: 'Border' },
  { key: 'BORDERS_LEFT_BORDER_MODERATE', label: 'left-border-moderate', bit: 1n << 12n, category: 'Border' },
  { key: 'BORDERS_RIGHT_BORDER_STRICT', label: 'right-border-strict', bit: 1n << 13n, category: 'Border' },
  { key: 'BORDERS_RIGHT_BORDER_MODERATE', label: 'right-border-moderate', bit: 1n << 14n, category: 'Border' },
  { key: 'BORDERS_FULL_BORDER_MODERATE', label: 'full-border-moderate', bit: 1n << 15n, category: 'Border' },
  { key: 'BORDERS_FULL_BORDER_STRICT', label: 'full-border-strict', bit: 1n << 16n, category: 'Border' },
  { key: 'WEIGHT_CENTER_HEAVY', label: 'center-heavy', bit: 1n << 17n, category: 'Weight Distribution' },
  { key: 'WEIGHT_CENTER_EMPTY', label: 'center-empty', bit: 1n << 18n, category: 'Weight Distribution' },
  { key: 'WEIGHT_EDGE_HEAVY', label: 'edge-heavy', bit: 1n << 19n, category: 'Weight Distribution' },
  { key: 'WEIGHT_TOP_HEAVY', label: 'top-heavy', bit: 1n << 20n, category: 'Weight Distribution' },
  { key: 'WEIGHT_BOTTOM_HEAVY', label: 'bottom-heavy', bit: 1n << 21n, category: 'Weight Distribution' },
  { key: 'WEIGHT_LEFT_HEAVY', label: 'left-heavy', bit: 1n << 22n, category: 'Weight Distribution' },
  { key: 'WEIGHT_RIGHT_HEAVY', label: 'right-heavy', bit: 1n << 23n, category: 'Weight Distribution' },
  { key: 'WEIGHT_TOP_LEFT_HEAVY', label: 'top-left-heavy', bit: 1n << 24n, category: 'Weight Distribution' },
  { key: 'WEIGHT_TOP_RIGHT_HEAVY', label: 'top-right-heavy', bit: 1n << 25n, category: 'Weight Distribution' },
  { key: 'WEIGHT_BOTTOM_LEFT_HEAVY', label: 'bottom-left-heavy', bit: 1n << 26n, category: 'Weight Distribution' },
  { key: 'WEIGHT_BOTTOM_RIGHT_HEAVY', label: 'bottom-right-heavy', bit: 1n << 27n, category: 'Weight Distribution' },
  { key: 'SHAPE_CROSS', label: 'shape-cross', bit: 1n << 28n, category: 'Shape' },
  { key: 'SHAPE_ALL_CORNERS', label: 'shape-all-corners', bit: 1n << 29n, category: 'Shape' },
  { key: 'SHAPE_L', label: 'shape-l', bit: 1n << 30n, category: 'Shape' },
  { key: 'SHAPE_T', label: 'shape-t', bit: 1n << 31n, category: 'Shape' },
  { key: 'SHAPE_RING', label: 'shape-ring', bit: 1n << 32n, category: 'Shape' },
  { key: 'SHAPE_X', label: 'shape-x', bit: 1n << 33n, category: 'Shape' },
  { key: 'SHAPE_ARROW', label: 'shape-arrow', bit: 1n << 34n, category: 'Shape' },
  { key: 'SHAPE_H', label: 'shape-h', bit: 1n << 35n, category: 'Shape' },
  { key: 'GENERAL_HORIZONTAL_LINE', label: 'horizontal-line', bit: 1n << 36n, category: 'Basic Elements' },
  { key: 'GENERAL_VERTICAL_LINE', label: 'vertical-line', bit: 1n << 37n, category: 'Basic Elements' },
  { key: 'GENERAL_ISOLATED_PIXELS', label: 'isolated-pixels', bit: 1n << 38n, category: 'Basic Elements' },
] as const;
